// Code generated by "stringer -type=Kind -output=kind_stringer_generated.go"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KindUnknown-0]
	_ = x[KindEndOfFile-1]
	_ = x[KindSingleLineCommentTrivia-2]
	_ = x[KindMultiLineCommentTrivia-3]
	_ = x[KindNewLineTrivia-4]
	_ = x[KindWhitespaceTrivia-5]
	_ = x[KindConflictMarkerTrivia-6]
	_ = x[KindNonTextFileMarkerTrivia-7]
	_ = x[KindNumericLiteral-8]
	_ = x[KindBigIntLiteral-9]
	_ = x[KindStringLiteral-10]
	_ = x[KindJsxText-11]
	_ = x[KindJsxTextAllWhiteSpaces-12]
	_ = x[KindRegularExpressionLiteral-13]
	_ = x[KindNoSubstitutionTemplateLiteral-14]
	_ = x[KindTemplateHead-15]
	_ = x[KindTemplateMiddle-16]
	_ = x[KindTemplateTail-17]
	_ = x[KindOpenBraceToken-18]
	_ = x[KindCloseBraceToken-19]
	_ = x[KindOpenParenToken-20]
	_ = x[KindCloseParenToken-21]
	_ = x[KindOpenBracketToken-22]
	_ = x[KindCloseBracketToken-23]
	_ = x[KindDotToken-24]
	_ = x[KindDotDotDotToken-25]
	_ = x[KindSemicolonToken-26]
	_ = x[KindCommaToken-27]
	_ = x[KindQuestionDotToken-28]
	_ = x[KindLessThanToken-29]
	_ = x[KindLessThanSlashToken-30]
	_ = x[KindGreaterThanToken-31]
	_ = x[KindLessThanEqualsToken-32]
	_ = x[KindGreaterThanEqualsToken-33]
	_ = x[KindEqualsEqualsToken-34]
	_ = x[KindExclamationEqualsToken-35]
	_ = x[KindEqualsEqualsEqualsToken-36]
	_ = x[KindExclamationEqualsEqualsToken-37]
	_ = x[KindEqualsGreaterThanToken-38]
	_ = x[KindPlusToken-39]
	_ = x[KindMinusToken-40]
	_ = x[KindAsteriskToken-41]
	_ = x[KindAsteriskAsteriskToken-42]
	_ = x[KindHashMinusToken-43]
	_ = x[KindHashPlusToken-44]
	_ = x[KindHashAsteriskToken-45]
	_ = x[KindSlashToken-46]
	_ = x[KindPercentToken-47]
	_ = x[KindPlusPlusToken-48]
	_ = x[KindMinusMinusToken-49]
	_ = x[KindLessThanLessThanToken-50]
	_ = x[KindGreaterThanGreaterThanToken-51]
	_ = x[KindGreaterThanGreaterThanGreaterThanToken-52]
	_ = x[KindAmpersandToken-53]
	_ = x[KindBarToken-54]
	_ = x[KindCaretToken-55]
	_ = x[KindExclamationToken-56]
	_ = x[KindTildeToken-57]
	_ = x[KindAmpersandAmpersandToken-58]
	_ = x[KindBarBarToken-59]
	_ = x[KindQuestionToken-60]
	_ = x[KindColonToken-61]
	_ = x[KindAtToken-62]
	_ = x[KindQuestionQuestionToken-63]
	_ = x[KindBacktickToken-64]
	_ = x[KindHashToken-65]
	_ = x[KindEqualsToken-66]
	_ = x[KindPlusEqualsToken-67]
	_ = x[KindMinusEqualsToken-68]
	_ = x[KindAsteriskEqualsToken-69]
	_ = x[KindAsteriskAsteriskEqualsToken-70]
	_ = x[KindSlashEqualsToken-71]
	_ = x[KindPercentEqualsToken-72]
	_ = x[KindLessThanLessThanEqualsToken-73]
	_ = x[KindGreaterThanGreaterThanEqualsToken-74]
	_ = x[KindGreaterThanGreaterThanGreaterThanEqualsToken-75]
	_ = x[KindAmpersandEqualsToken-76]
	_ = x[KindBarEqualsToken-77]
	_ = x[KindBarBarEqualsToken-78]
	_ = x[KindAmpersandAmpersandEqualsToken-79]
	_ = x[KindQuestionQuestionEqualsToken-80]
	_ = x[KindCaretEqualsToken-81]
	_ = x[KindIdentifier-82]
	_ = x[KindPrivateIdentifier-83]
	_ = x[KindJSDocCommentTextToken-84]
	_ = x[KindBreakKeyword-85]
	_ = x[KindCaseKeyword-86]
	_ = x[KindCatchKeyword-87]
	_ = x[KindClassKeyword-88]
	_ = x[KindConstKeyword-89]
	_ = x[KindContinueKeyword-90]
	_ = x[KindDebuggerKeyword-91]
	_ = x[KindDefaultKeyword-92]
	_ = x[KindDeleteKeyword-93]
	_ = x[KindDoKeyword-94]
	_ = x[KindElseKeyword-95]
	_ = x[KindEnumKeyword-96]
	_ = x[KindExportKeyword-97]
	_ = x[KindExtendsKeyword-98]
	_ = x[KindFalseKeyword-99]
	_ = x[KindFinallyKeyword-100]
	_ = x[KindForKeyword-101]
	_ = x[KindFunctionKeyword-102]
	_ = x[KindIfKeyword-103]
	_ = x[KindImportKeyword-104]
	_ = x[KindInKeyword-105]
	_ = x[KindInstanceOfKeyword-106]
	_ = x[KindNewKeyword-107]
	_ = x[KindNullKeyword-108]
	_ = x[KindReturnKeyword-109]
	_ = x[KindSuperKeyword-110]
	_ = x[KindSwitchKeyword-111]
	_ = x[KindThisKeyword-112]
	_ = x[KindThrowKeyword-113]
	_ = x[KindTrueKeyword-114]
	_ = x[KindTryKeyword-115]
	_ = x[KindTypeOfKeyword-116]
	_ = x[KindVarKeyword-117]
	_ = x[KindVoidKeyword-118]
	_ = x[KindWhileKeyword-119]
	_ = x[KindWithKeyword-120]
	_ = x[KindImplementsKeyword-121]
	_ = x[KindInterfaceKeyword-122]
	_ = x[KindLetKeyword-123]
	_ = x[KindPackageKeyword-124]
	_ = x[KindPrivateKeyword-125]
	_ = x[KindProtectedKeyword-126]
	_ = x[KindPublicKeyword-127]
	_ = x[KindStaticKeyword-128]
	_ = x[KindYieldKeyword-129]
	_ = x[KindAbstractKeyword-130]
	_ = x[KindAccessorKeyword-131]
	_ = x[KindAsKeyword-132]
	_ = x[KindAssertsKeyword-133]
	_ = x[KindAssertKeyword-134]
	_ = x[KindAnyKeyword-135]
	_ = x[KindAsyncKeyword-136]
	_ = x[KindAwaitKeyword-137]
	_ = x[KindBooleanKeyword-138]
	_ = x[KindConstructorKeyword-139]
	_ = x[KindDeclareKeyword-140]
	_ = x[KindGetKeyword-141]
	_ = x[KindImmediateKeyword-142]
	_ = x[KindInferKeyword-143]
	_ = x[KindIntrinsicKeyword-144]
	_ = x[KindIsKeyword-145]
	_ = x[KindKeyOfKeyword-146]
	_ = x[KindModuleKeyword-147]
	_ = x[KindNamespaceKeyword-148]
	_ = x[KindNeverKeyword-149]
	_ = x[KindOutKeyword-150]
	_ = x[KindReadonlyKeyword-151]
	_ = x[KindRequireKeyword-152]
	_ = x[KindNumberKeyword-153]
	_ = x[KindObjectKeyword-154]
	_ = x[KindSatisfiesKeyword-155]
	_ = x[KindSetKeyword-156]
	_ = x[KindStringKeyword-157]
	_ = x[KindSymbolKeyword-158]
	_ = x[KindTypeKeyword-159]
	_ = x[KindUndefinedKeyword-160]
	_ = x[KindUniqueKeyword-161]
	_ = x[KindUnknownKeyword-162]
	_ = x[KindUsingKeyword-163]
	_ = x[KindFromKeyword-164]
	_ = x[KindGlobalKeyword-165]
	_ = x[KindBigIntKeyword-166]
	_ = x[KindOverrideKeyword-167]
	_ = x[KindOfKeyword-168]
	_ = x[KindQualifiedName-169]
	_ = x[KindComputedPropertyName-170]
	_ = x[KindTypeParameter-171]
	_ = x[KindParameter-172]
	_ = x[KindDecorator-173]
	_ = x[KindPropertySignature-174]
	_ = x[KindPropertyDeclaration-175]
	_ = x[KindMethodSignature-176]
	_ = x[KindMethodDeclaration-177]
	_ = x[KindClassStaticBlockDeclaration-178]
	_ = x[KindConstructor-179]
	_ = x[KindGetAccessor-180]
	_ = x[KindSetAccessor-181]
	_ = x[KindCallSignature-182]
	_ = x[KindConstructSignature-183]
	_ = x[KindIndexSignature-184]
	_ = x[KindTypePredicate-185]
	_ = x[KindTypeReference-186]
	_ = x[KindFunctionType-187]
	_ = x[KindConstructorType-188]
	_ = x[KindTypeQuery-189]
	_ = x[KindTypeLiteral-190]
	_ = x[KindArrayType-191]
	_ = x[KindTupleType-192]
	_ = x[KindOptionalType-193]
	_ = x[KindRestType-194]
	_ = x[KindUnionType-195]
	_ = x[KindIntersectionType-196]
	_ = x[KindConditionalType-197]
	_ = x[KindInferType-198]
	_ = x[KindParenthesizedType-199]
	_ = x[KindThisType-200]
	_ = x[KindTypeOperator-201]
	_ = x[KindIndexedAccessType-202]
	_ = x[KindMappedType-203]
	_ = x[KindLiteralType-204]
	_ = x[KindNamedTupleMember-205]
	_ = x[KindTemplateLiteralType-206]
	_ = x[KindTemplateLiteralTypeSpan-207]
	_ = x[KindImportType-208]
	_ = x[KindIntrinsicMathType-209]
	_ = x[KindBinaryMathType-210]
	_ = x[KindObjectBindingPattern-211]
	_ = x[KindArrayBindingPattern-212]
	_ = x[KindBindingElement-213]
	_ = x[KindArrayLiteralExpression-214]
	_ = x[KindObjectLiteralExpression-215]
	_ = x[KindPropertyAccessExpression-216]
	_ = x[KindElementAccessExpression-217]
	_ = x[KindCallExpression-218]
	_ = x[KindNewExpression-219]
	_ = x[KindTaggedTemplateExpression-220]
	_ = x[KindTypeAssertionExpression-221]
	_ = x[KindParenthesizedExpression-222]
	_ = x[KindFunctionExpression-223]
	_ = x[KindArrowFunction-224]
	_ = x[KindDeleteExpression-225]
	_ = x[KindTypeOfExpression-226]
	_ = x[KindVoidExpression-227]
	_ = x[KindAwaitExpression-228]
	_ = x[KindPrefixUnaryExpression-229]
	_ = x[KindPostfixUnaryExpression-230]
	_ = x[KindBinaryExpression-231]
	_ = x[KindConditionalExpression-232]
	_ = x[KindTemplateExpression-233]
	_ = x[KindYieldExpression-234]
	_ = x[KindSpreadElement-235]
	_ = x[KindClassExpression-236]
	_ = x[KindOmittedExpression-237]
	_ = x[KindExpressionWithTypeArguments-238]
	_ = x[KindAsExpression-239]
	_ = x[KindNonNullExpression-240]
	_ = x[KindMetaProperty-241]
	_ = x[KindSyntheticExpression-242]
	_ = x[KindSatisfiesExpression-243]
	_ = x[KindTemplateSpan-244]
	_ = x[KindSemicolonClassElement-245]
	_ = x[KindBlock-246]
	_ = x[KindEmptyStatement-247]
	_ = x[KindVariableStatement-248]
	_ = x[KindExpressionStatement-249]
	_ = x[KindIfStatement-250]
	_ = x[KindDoStatement-251]
	_ = x[KindWhileStatement-252]
	_ = x[KindForStatement-253]
	_ = x[KindForInStatement-254]
	_ = x[KindForOfStatement-255]
	_ = x[KindContinueStatement-256]
	_ = x[KindBreakStatement-257]
	_ = x[KindReturnStatement-258]
	_ = x[KindWithStatement-259]
	_ = x[KindSwitchStatement-260]
	_ = x[KindLabeledStatement-261]
	_ = x[KindThrowStatement-262]
	_ = x[KindTryStatement-263]
	_ = x[KindDebuggerStatement-264]
	_ = x[KindVariableDeclaration-265]
	_ = x[KindVariableDeclarationList-266]
	_ = x[KindFunctionDeclaration-267]
	_ = x[KindClassDeclaration-268]
	_ = x[KindInterfaceDeclaration-269]
	_ = x[KindTypeAliasDeclaration-270]
	_ = x[KindEnumDeclaration-271]
	_ = x[KindModuleDeclaration-272]
	_ = x[KindModuleBlock-273]
	_ = x[KindCaseBlock-274]
	_ = x[KindNamespaceExportDeclaration-275]
	_ = x[KindImportEqualsDeclaration-276]
	_ = x[KindImportDeclaration-277]
	_ = x[KindImportClause-278]
	_ = x[KindNamespaceImport-279]
	_ = x[KindNamedImports-280]
	_ = x[KindImportSpecifier-281]
	_ = x[KindExportAssignment-282]
	_ = x[KindExportDeclaration-283]
	_ = x[KindNamedExports-284]
	_ = x[KindNamespaceExport-285]
	_ = x[KindExportSpecifier-286]
	_ = x[KindMissingDeclaration-287]
	_ = x[KindExternalModuleReference-288]
	_ = x[KindJsxElement-289]
	_ = x[KindJsxSelfClosingElement-290]
	_ = x[KindJsxOpeningElement-291]
	_ = x[KindJsxClosingElement-292]
	_ = x[KindJsxFragment-293]
	_ = x[KindJsxOpeningFragment-294]
	_ = x[KindJsxClosingFragment-295]
	_ = x[KindJsxAttribute-296]
	_ = x[KindJsxAttributes-297]
	_ = x[KindJsxSpreadAttribute-298]
	_ = x[KindJsxExpression-299]
	_ = x[KindJsxNamespacedName-300]
	_ = x[KindCaseClause-301]
	_ = x[KindDefaultClause-302]
	_ = x[KindHeritageClause-303]
	_ = x[KindCatchClause-304]
	_ = x[KindImportAttributes-305]
	_ = x[KindImportAttribute-306]
	_ = x[KindPropertyAssignment-307]
	_ = x[KindShorthandPropertyAssignment-308]
	_ = x[KindSpreadAssignment-309]
	_ = x[KindEnumMember-310]
	_ = x[KindSourceFile-311]
	_ = x[KindBundle-312]
	_ = x[KindJSDocTypeExpression-313]
	_ = x[KindJSDocNameReference-314]
	_ = x[KindJSDocMemberName-315]
	_ = x[KindJSDocAllType-316]
	_ = x[KindJSDocNullableType-317]
	_ = x[KindJSDocNonNullableType-318]
	_ = x[KindJSDocOptionalType-319]
	_ = x[KindJSDocVariadicType-320]
	_ = x[KindJSDoc-321]
	_ = x[KindJSDocText-322]
	_ = x[KindJSDocTypeLiteral-323]
	_ = x[KindJSDocSignature-324]
	_ = x[KindJSDocLink-325]
	_ = x[KindJSDocLinkCode-326]
	_ = x[KindJSDocLinkPlain-327]
	_ = x[KindJSDocTag-328]
	_ = x[KindJSDocAugmentsTag-329]
	_ = x[KindJSDocImplementsTag-330]
	_ = x[KindJSDocDeprecatedTag-331]
	_ = x[KindJSDocPublicTag-332]
	_ = x[KindJSDocPrivateTag-333]
	_ = x[KindJSDocProtectedTag-334]
	_ = x[KindJSDocReadonlyTag-335]
	_ = x[KindJSDocOverrideTag-336]
	_ = x[KindJSDocCallbackTag-337]
	_ = x[KindJSDocOverloadTag-338]
	_ = x[KindJSDocParameterTag-339]
	_ = x[KindJSDocReturnTag-340]
	_ = x[KindJSDocThisTag-341]
	_ = x[KindJSDocTypeTag-342]
	_ = x[KindJSDocTemplateTag-343]
	_ = x[KindJSDocTypedefTag-344]
	_ = x[KindJSDocSeeTag-345]
	_ = x[KindJSDocPropertyTag-346]
	_ = x[KindJSDocSatisfiesTag-347]
	_ = x[KindJSDocImportTag-348]
	_ = x[KindSyntaxList-349]
	_ = x[KindJSTypeAliasDeclaration-350]
	_ = x[KindJSExportAssignment-351]
	_ = x[KindCommonJSExport-352]
	_ = x[KindNotEmittedStatement-353]
	_ = x[KindPartiallyEmittedExpression-354]
	_ = x[KindCommaListExpression-355]
	_ = x[KindSyntheticReferenceExpression-356]
	_ = x[KindCount-357]
}

const _Kind_name = "KindUnknownKindEndOfFileKindSingleLineCommentTriviaKindMultiLineCommentTriviaKindNewLineTriviaKindWhitespaceTriviaKindConflictMarkerTriviaKindNonTextFileMarkerTriviaKindNumericLiteralKindBigIntLiteralKindStringLiteralKindJsxTextKindJsxTextAllWhiteSpacesKindRegularExpressionLiteralKindNoSubstitutionTemplateLiteralKindTemplateHeadKindTemplateMiddleKindTemplateTailKindOpenBraceTokenKindCloseBraceTokenKindOpenParenTokenKindCloseParenTokenKindOpenBracketTokenKindCloseBracketTokenKindDotTokenKindDotDotDotTokenKindSemicolonTokenKindCommaTokenKindQuestionDotTokenKindLessThanTokenKindLessThanSlashTokenKindGreaterThanTokenKindLessThanEqualsTokenKindGreaterThanEqualsTokenKindEqualsEqualsTokenKindExclamationEqualsTokenKindEqualsEqualsEqualsTokenKindExclamationEqualsEqualsTokenKindEqualsGreaterThanTokenKindPlusTokenKindMinusTokenKindAsteriskTokenKindAsteriskAsteriskTokenKindHashMinusTokenKindHashPlusTokenKindHashAsteriskTokenKindSlashTokenKindPercentTokenKindPlusPlusTokenKindMinusMinusTokenKindLessThanLessThanTokenKindGreaterThanGreaterThanTokenKindGreaterThanGreaterThanGreaterThanTokenKindAmpersandTokenKindBarTokenKindCaretTokenKindExclamationTokenKindTildeTokenKindAmpersandAmpersandTokenKindBarBarTokenKindQuestionTokenKindColonTokenKindAtTokenKindQuestionQuestionTokenKindBacktickTokenKindHashTokenKindEqualsTokenKindPlusEqualsTokenKindMinusEqualsTokenKindAsteriskEqualsTokenKindAsteriskAsteriskEqualsTokenKindSlashEqualsTokenKindPercentEqualsTokenKindLessThanLessThanEqualsTokenKindGreaterThanGreaterThanEqualsTokenKindGreaterThanGreaterThanGreaterThanEqualsTokenKindAmpersandEqualsTokenKindBarEqualsTokenKindBarBarEqualsTokenKindAmpersandAmpersandEqualsTokenKindQuestionQuestionEqualsTokenKindCaretEqualsTokenKindIdentifierKindPrivateIdentifierKindJSDocCommentTextTokenKindBreakKeywordKindCaseKeywordKindCatchKeywordKindClassKeywordKindConstKeywordKindContinueKeywordKindDebuggerKeywordKindDefaultKeywordKindDeleteKeywordKindDoKeywordKindElseKeywordKindEnumKeywordKindExportKeywordKindExtendsKeywordKindFalseKeywordKindFinallyKeywordKindForKeywordKindFunctionKeywordKindIfKeywordKindImportKeywordKindInKeywordKindInstanceOfKeywordKindNewKeywordKindNullKeywordKindReturnKeywordKindSuperKeywordKindSwitchKeywordKindThisKeywordKindThrowKeywordKindTrueKeywordKindTryKeywordKindTypeOfKeywordKindVarKeywordKindVoidKeywordKindWhileKeywordKindWithKeywordKindImplementsKeywordKindInterfaceKeywordKindLetKeywordKindPackageKeywordKindPrivateKeywordKindProtectedKeywordKindPublicKeywordKindStaticKeywordKindYieldKeywordKindAbstractKeywordKindAccessorKeywordKindAsKeywordKindAssertsKeywordKindAssertKeywordKindAnyKeywordKindAsyncKeywordKindAwaitKeywordKindBooleanKeywordKindConstructorKeywordKindDeclareKeywordKindGetKeywordKindImmediateKeywordKindInferKeywordKindIntrinsicKeywordKindIsKeywordKindKeyOfKeywordKindModuleKeywordKindNamespaceKeywordKindNeverKeywordKindOutKeywordKindReadonlyKeywordKindRequireKeywordKindNumberKeywordKindObjectKeywordKindSatisfiesKeywordKindSetKeywordKindStringKeywordKindSymbolKeywordKindTypeKeywordKindUndefinedKeywordKindUniqueKeywordKindUnknownKeywordKindUsingKeywordKindFromKeywordKindGlobalKeywordKindBigIntKeywordKindOverrideKeywordKindOfKeywordKindQualifiedNameKindComputedPropertyNameKindTypeParameterKindParameterKindDecoratorKindPropertySignatureKindPropertyDeclarationKindMethodSignatureKindMethodDeclarationKindClassStaticBlockDeclarationKindConstructorKindGetAccessorKindSetAccessorKindCallSignatureKindConstructSignatureKindIndexSignatureKindTypePredicateKindTypeReferenceKindFunctionTypeKindConstructorTypeKindTypeQueryKindTypeLiteralKindArrayTypeKindTupleTypeKindOptionalTypeKindRestTypeKindUnionTypeKindIntersectionTypeKindConditionalTypeKindInferTypeKindParenthesizedTypeKindThisTypeKindTypeOperatorKindIndexedAccessTypeKindMappedTypeKindLiteralTypeKindNamedTupleMemberKindTemplateLiteralTypeKindTemplateLiteralTypeSpanKindImportTypeKindIntrinsicMathTypeKindBinaryMathTypeKindObjectBindingPatternKindArrayBindingPatternKindBindingElementKindArrayLiteralExpressionKindObjectLiteralExpressionKindPropertyAccessExpressionKindElementAccessExpressionKindCallExpressionKindNewExpressionKindTaggedTemplateExpressionKindTypeAssertionExpressionKindParenthesizedExpressionKindFunctionExpressionKindArrowFunctionKindDeleteExpressionKindTypeOfExpressionKindVoidExpressionKindAwaitExpressionKindPrefixUnaryExpressionKindPostfixUnaryExpressionKindBinaryExpressionKindConditionalExpressionKindTemplateExpressionKindYieldExpressionKindSpreadElementKindClassExpressionKindOmittedExpressionKindExpressionWithTypeArgumentsKindAsExpressionKindNonNullExpressionKindMetaPropertyKindSyntheticExpressionKindSatisfiesExpressionKindTemplateSpanKindSemicolonClassElementKindBlockKindEmptyStatementKindVariableStatementKindExpressionStatementKindIfStatementKindDoStatementKindWhileStatementKindForStatementKindForInStatementKindForOfStatementKindContinueStatementKindBreakStatementKindReturnStatementKindWithStatementKindSwitchStatementKindLabeledStatementKindThrowStatementKindTryStatementKindDebuggerStatementKindVariableDeclarationKindVariableDeclarationListKindFunctionDeclarationKindClassDeclarationKindInterfaceDeclarationKindTypeAliasDeclarationKindEnumDeclarationKindModuleDeclarationKindModuleBlockKindCaseBlockKindNamespaceExportDeclarationKindImportEqualsDeclarationKindImportDeclarationKindImportClauseKindNamespaceImportKindNamedImportsKindImportSpecifierKindExportAssignmentKindExportDeclarationKindNamedExportsKindNamespaceExportKindExportSpecifierKindMissingDeclarationKindExternalModuleReferenceKindJsxElementKindJsxSelfClosingElementKindJsxOpeningElementKindJsxClosingElementKindJsxFragmentKindJsxOpeningFragmentKindJsxClosingFragmentKindJsxAttributeKindJsxAttributesKindJsxSpreadAttributeKindJsxExpressionKindJsxNamespacedNameKindCaseClauseKindDefaultClauseKindHeritageClauseKindCatchClauseKindImportAttributesKindImportAttributeKindPropertyAssignmentKindShorthandPropertyAssignmentKindSpreadAssignmentKindEnumMemberKindSourceFileKindBundleKindJSDocTypeExpressionKindJSDocNameReferenceKindJSDocMemberNameKindJSDocAllTypeKindJSDocNullableTypeKindJSDocNonNullableTypeKindJSDocOptionalTypeKindJSDocVariadicTypeKindJSDocKindJSDocTextKindJSDocTypeLiteralKindJSDocSignatureKindJSDocLinkKindJSDocLinkCodeKindJSDocLinkPlainKindJSDocTagKindJSDocAugmentsTagKindJSDocImplementsTagKindJSDocDeprecatedTagKindJSDocPublicTagKindJSDocPrivateTagKindJSDocProtectedTagKindJSDocReadonlyTagKindJSDocOverrideTagKindJSDocCallbackTagKindJSDocOverloadTagKindJSDocParameterTagKindJSDocReturnTagKindJSDocThisTagKindJSDocTypeTagKindJSDocTemplateTagKindJSDocTypedefTagKindJSDocSeeTagKindJSDocPropertyTagKindJSDocSatisfiesTagKindJSDocImportTagKindSyntaxListKindJSTypeAliasDeclarationKindJSExportAssignmentKindCommonJSExportKindNotEmittedStatementKindPartiallyEmittedExpressionKindCommaListExpressionKindSyntheticReferenceExpressionKindCount"

var _Kind_index = [...]uint16{0, 11, 24, 51, 77, 94, 114, 138, 165, 183, 200, 217, 228, 253, 281, 314, 330, 348, 364, 382, 401, 419, 438, 458, 479, 491, 509, 527, 541, 561, 578, 600, 620, 643, 669, 690, 716, 743, 775, 801, 814, 828, 845, 870, 888, 905, 926, 940, 956, 973, 992, 1017, 1048, 1090, 1108, 1120, 1134, 1154, 1168, 1195, 1210, 1227, 1241, 1252, 1277, 1294, 1307, 1322, 1341, 1361, 1384, 1415, 1435, 1457, 1488, 1525, 1573, 1597, 1615, 1636, 1669, 1700, 1720, 1734, 1755, 1780, 1796, 1811, 1827, 1843, 1859, 1878, 1897, 1915, 1932, 1945, 1960, 1975, 1992, 2010, 2026, 2044, 2058, 2077, 2090, 2107, 2120, 2141, 2155, 2170, 2187, 2203, 2220, 2235, 2251, 2266, 2280, 2297, 2311, 2326, 2342, 2357, 2378, 2398, 2412, 2430, 2448, 2468, 2485, 2502, 2518, 2537, 2556, 2569, 2587, 2604, 2618, 2634, 2650, 2668, 2690, 2708, 2722, 2742, 2758, 2778, 2791, 2807, 2824, 2844, 2860, 2874, 2893, 2911, 2928, 2945, 2965, 2979, 2996, 3013, 3028, 3048, 3065, 3083, 3099, 3114, 3131, 3148, 3167, 3180, 3197, 3221, 3238, 3251, 3264, 3285, 3308, 3327, 3348, 3379, 3394, 3409, 3424, 3441, 3463, 3481, 3498, 3515, 3531, 3550, 3563, 3578, 3591, 3604, 3620, 3632, 3645, 3665, 3684, 3697, 3718, 3730, 3746, 3767, 3781, 3796, 3816, 3839, 3866, 3880, 3901, 3919, 3943, 3966, 3984, 4010, 4037, 4065, 4092, 4110, 4127, 4155, 4182, 4209, 4231, 4248, 4268, 4288, 4306, 4325, 4350, 4376, 4396, 4421, 4443, 4462, 4479, 4498, 4519, 4550, 4566, 4587, 4603, 4626, 4649, 4665, 4690, 4699, 4717, 4738, 4761, 4776, 4791, 4809, 4825, 4843, 4861, 4882, 4900, 4919, 4936, 4955, 4975, 4993, 5009, 5030, 5053, 5080, 5103, 5123, 5147, 5171, 5190, 5211, 5226, 5239, 5269, 5296, 5317, 5333, 5352, 5368, 5387, 5407, 5428, 5444, 5463, 5482, 5504, 5531, 5545, 5570, 5591, 5612, 5627, 5649, 5671, 5687, 5704, 5726, 5743, 5764, 5778, 5795, 5813, 5828, 5848, 5867, 5889, 5920, 5940, 5954, 5968, 5978, 6001, 6023, 6042, 6058, 6079, 6103, 6124, 6145, 6154, 6167, 6187, 6205, 6218, 6235, 6253, 6265, 6285, 6307, 6329, 6347, 6366, 6387, 6407, 6427, 6447, 6467, 6488, 6506, 6522, 6538, 6558, 6577, 6592, 6612, 6633, 6651, 6665, 6691, 6713, 6731, 6754, 6784, 6807, 6839, 6848}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
