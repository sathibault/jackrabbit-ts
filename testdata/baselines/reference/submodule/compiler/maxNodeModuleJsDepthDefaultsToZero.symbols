//// [tests/cases/compiler/maxNodeModuleJsDepthDefaultsToZero.ts] ////

=== /typings/index.d.ts ===
declare module "shortid" {
>"shortid" : Symbol("shortid", Decl(index.d.ts, 0, 0))

    export var x: number;
>x : Symbol(x, Decl(index.d.ts, 1, 14))
}

=== /index.ts ===
/// <reference path="/typings/index.d.ts" />
import * as foo from "shortid";
>foo : Symbol(foo, Decl(index.ts, 1, 6))

foo.x // found in index.d.ts
>foo.x : Symbol(x, Decl(index.d.ts, 1, 14))
>foo : Symbol(foo, Decl(index.ts, 1, 6))
>x : Symbol(x, Decl(index.d.ts, 1, 14))

foo.y // ignored from shortid/index.js
>foo : Symbol(foo, Decl(index.ts, 1, 6))


=== /node_modules/shortid/node_modules/z/index.js ===
// z will not be found because maxNodeModulesJsDepth: 0
module.exports = { z: 'no' };
>module.exports : Symbol(export=, Decl(index.js, 0, 0))
>module : Symbol(module.exports)
>exports : Symbol(export=, Decl(index.js, 0, 0))
>z : Symbol(z, Decl(index.js, 1, 18))

=== /node_modules/shortid/index.js ===
var z = require('z');
>z : Symbol(z, Decl(index.js, 0, 3))
>require : Symbol(require)
>'z' : Symbol("/node_modules/shortid/node_modules/z/index", Decl(index.js, 0, 0))

var y = { y: 'foo' };
>y : Symbol(y, Decl(index.js, 1, 3))
>y : Symbol(y, Decl(index.js, 1, 9))

module.exports = y;
>module.exports : Symbol(y, Decl(index.js, 1, 3))
>module : Symbol(module.exports)
>exports : Symbol(y, Decl(index.js, 1, 3))
>y : Symbol(y, Decl(index.js, 1, 3))

