//// [tests/cases/compiler/modulePreserve4.ts] ////

=== /a.js ===
export const x = 0;
>x : 0
>0 : 0

module.exports.y = 0; // Error
>module.exports.y = 0 : 0
>module.exports.y : 0
>module.exports : typeof import("/a")
>module : { "/a": typeof import("/a"); }
>exports : typeof import("/a")
>y : 0
>0 : 0

=== /b.ts ===

export default 0;

=== /c.ts ===
export = {
>{  default: function() {}} : { default: () => void; }

  default: function() {}
>default : () => void
>function() {} : () => void

};

=== /d.ts ===
export = function() {};
>function() {} : () => void

=== /e.mts ===

export = 0;

=== /f.cts ===

export default 0;

=== /g.js ===
exports.default = 0;
>exports.default = 0 : 0
>exports.default : 0
>exports : typeof import("/g")
>default : 0
>0 : 0

=== /main1.ts ===
import { x, y } from "./a"; // No y
>x : 0
>y : 0

import a1 = require("./a"); // { x: 0 }
>a1 : typeof import("/a")

const a2 = require("./a"); // Error in TS
>a2 : any
>require("./a") : any
>require : any
>"./a" : "./a"

const a3 = await import("./a"); // { x: 0 }
>a3 : typeof import("/a")
>await import("./a") : typeof import("/a")
>import("./a") : Promise<typeof import("/a")>
>"./a" : "./a"

a3.x;
>a3.x : 0
>a3 : typeof import("/a")
>x : 0

import b1 from "./b"; // 0
>b1 : 0

import b2 = require("./b"); // { default: 0 }
>b2 : typeof import("/b")

b2.default;
>b2.default : 0
>b2 : typeof import("/b")
>default : 0

const b3 = await import("./b"); // { default: 0 }
>b3 : typeof import("/b")
>await import("./b") : typeof import("/b")
>import("./b") : Promise<typeof import("/b")>
>"./b" : "./b"

b3.default;
>b3.default : 0
>b3 : typeof import("/b")
>default : 0

import c1 from "./c"; // { default: [Function: default] }
>c1 : { default: () => void; }

import c2 = require("./c"); // { default: [Function: default] }
>c2 : { default: () => void; }

c2.default;
>c2.default : () => void
>c2 : { default: () => void; }
>default : () => void

import d1 from "./d"; // [Function: default]
>d1 : () => void

import d2 = require("./d"); // [Function: default]
>d2 : () => void

d2();
>d2() : void
>d2 : () => void

d2.default(); // Error
>d2.default() : any
>d2.default : any
>d2 : () => void
>default : any

const d3 = await import("./d"); // { default: [Function: default] }
>d3 : { default: () => void; }
>await import("./d") : { default: () => void; }
>import("./d") : Promise<{ default: () => void; }>
>"./d" : "./d"

d3.default();
>d3.default() : void
>d3.default : () => void
>d3 : { default: () => void; }
>default : () => void

import e1 from "./e.mjs"; // 0
>e1 : 0

import e2 = require("./e.mjs"); // 0
>e2 : 0

import f1 from "./f.cjs"; // 0
>f1 : 0

import f2 = require("./f.cjs"); // { default: 0 }
>f2 : typeof import("/f")

f2.default;
>f2.default : 0
>f2 : typeof import("/f")
>default : 0

import g1 from "./g"; // { default: 0 }
>g1 : 0

g1.default;
>g1.default : any
>g1 : 0
>default : any

import g2 = require("./g"); // { default: 0 }
>g2 : typeof import("/g")

g2.default;
>g2.default : 0
>g2 : typeof import("/g")
>default : 0

=== /main2.mts ===
import { x, y } from "./a"; // No y
>x : 0
>y : 0

import a1 = require("./a"); // { x: 0 }
>a1 : typeof import("/a")

a1.x;
>a1.x : 0
>a1 : typeof import("/a")
>x : 0

a1.default.x; // Arguably should exist but doesn't
>a1.default.x : any
>a1.default : any
>a1 : typeof import("/a")
>default : any
>x : any

const a2 = require("./a"); // Error in TS
>a2 : any
>require("./a") : any
>require : any
>"./a" : "./a"

import b1 from "./b"; // 0
>b1 : 0

import b2 = require("./b"); // { default: 0 }
>b2 : typeof import("/b")

import c1 from "./c"; // { default: [Function: default] }
>c1 : { default: () => void; }

import c2 = require("./c"); // { default: [Function: default] }
>c2 : { default: () => void; }

import d1 from "./d"; // [Function: default]
>d1 : () => void

import d2 = require("./d"); // [Function: default]
>d2 : () => void

import e1 from "./e.mjs"; // 0
>e1 : 0

import e2 = require("./e.mjs"); // 0
>e2 : 0

import f1 from "./f.cjs"; // 0
>f1 : 0

import f2 = require("./f.cjs"); // { default: 0 }
>f2 : typeof import("/f")

import g1 from "./g"; // { default: 0 }
>g1 : 0

import g2 = require("./g"); // { default: 0 }
>g2 : typeof import("/g")

=== /main3.cjs ===
import { x, y } from "./a"; // No y
>x : 0
>y : 0

import a1 = require("./a"); // Error in JS
>a1 : typeof import("/a")

const a2 = require("./a"); // { x: 0 }
>a2 : typeof import("/a")
>require("./a") : typeof import("/a")
>require : any
>"./a" : "./a"

import b1 from "./b"; // 0
>b1 : 0

const b2 = require("./b"); // { default: 0 }
>b2 : typeof import("/b")
>require("./b") : typeof import("/b")
>require : any
>"./b" : "./b"

import c1 from "./c"; // { default: [Function: default] }
>c1 : { default: () => void; }

const c2 = require("./c"); // { default: [Function: default] }
>c2 : { default: () => void; }
>require("./c") : { default: () => void; }
>require : any
>"./c" : "./c"

import d1 from "./d"; // [Function: default]
>d1 : () => void

const d2 = require("./d"); // [Function: default]
>d2 : () => void
>require("./d") : () => void
>require : any
>"./d" : "./d"

import e1 from "./e.mjs"; // 0
>e1 : 0

const e2 = require("./e.mjs"); // 0
>e2 : 0
>require("./e.mjs") : 0
>require : any
>"./e.mjs" : "./e.mjs"

import f1 from "./f.cjs"; // 0
>f1 : 0

const f2 = require("./f.cjs"); // { default: 0 }
>f2 : typeof import("/f")
>require("./f.cjs") : typeof import("/f")
>require : any
>"./f.cjs" : "./f.cjs"

import g1 from "./g"; // { default: 0 }
>g1 : 0

const g2 = require("./g"); // { default: 0 }
>g2 : typeof import("/g")
>require("./g") : typeof import("/g")
>require : any
>"./g" : "./g"

=== /main4.cjs ===
exports.x = require("./g");
>exports.x = require("./g") : any
>exports.x : any
>exports : typeof import("/main4")
>x : any
>require("./g") : any
>require : any
>"./g" : "./g"

=== /dummy.ts ===

export {}; // Silly test harness

