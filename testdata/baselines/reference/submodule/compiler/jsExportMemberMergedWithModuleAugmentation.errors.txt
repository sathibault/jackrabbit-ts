/index.ts(1,23): error TS2497: This module can only be referenced with ECMAScript imports/exports by turning on the 'esModuleInterop' flag and referencing its default export.
/index.ts(3,16): error TS2671: Cannot augment module './test' because it resolves to a non-module entity.
/index.ts(11,10): error TS2749: 'Abcde' refers to a value, but is being used as a type here. Did you mean 'typeof Abcde'?


==== /test.js (0 errors) ====
    class Abcde {
      /** @type {string} */
      x;
    }
    
    module.exports = {
      Abcde
    };
    
==== /index.ts (3 errors) ====
    import { Abcde } from "./test";
                          ~~~~~~~~
!!! error TS2497: This module can only be referenced with ECMAScript imports/exports by turning on the 'esModuleInterop' flag and referencing its default export.
    
    declare module "./test" {
                   ~~~~~~~~
!!! error TS2671: Cannot augment module './test' because it resolves to a non-module entity.
      interface Abcde { b: string }
    }
    
    new Abcde().x;
    
    // Bug: the type meaning from /test.js does not
    // propagate through the object literal export.
    const x: Abcde = { b: "" };
             ~~~~~
!!! error TS2749: 'Abcde' refers to a value, but is being used as a type here. Did you mean 'typeof Abcde'?
    