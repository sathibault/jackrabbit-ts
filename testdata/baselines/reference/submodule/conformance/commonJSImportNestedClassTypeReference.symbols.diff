--- old.commonJSImportNestedClassTypeReference.symbols
+++ new.commonJSImportNestedClassTypeReference.symbols
@@= skipped -11, +11 lines =@@
 >k : Symbol(k, Decl(main.js, 2, 11))
 
     k.values()
->k.values : Symbol(K.values, Decl(mod1.js, 1, 13))
 >k : Symbol(k, Decl(main.js, 2, 11))
->values : Symbol(K.values, Decl(mod1.js, 1, 13))
 }
 
 === mod1.js ===
 var NS = {}
->NS : Symbol(NS, Decl(mod1.js, 0, 3), Decl(mod1.js, 0, 11))
+>NS : Symbol(NS, Decl(mod1.js, 0, 3))
 
 NS.K =class {
->NS.K : Symbol(K, Decl(mod1.js, 0, 11))
->NS : Symbol(NS, Decl(mod1.js, 0, 3), Decl(mod1.js, 0, 11))
->K : Symbol(K, Decl(mod1.js, 0, 11))
+>NS : Symbol(NS, Decl(mod1.js, 0, 3))
 
     values() {
->values : Symbol(K.values, Decl(mod1.js, 1, 13))
+>values : Symbol(values, Decl(mod1.js, 1, 13))
 
         return new NS.K()
->NS.K : Symbol(K, Decl(mod1.js, 0, 11))
->NS : Symbol(NS, Decl(mod1.js, 0, 3), Decl(mod1.js, 0, 11))
->K : Symbol(K, Decl(mod1.js, 0, 11))
+>NS : Symbol(NS, Decl(mod1.js, 0, 3))
     }
 }
 exports.K = NS.K;
 >exports.K : Symbol(K, Decl(mod1.js, 5, 1))
->exports : Symbol(K, Decl(mod1.js, 5, 1))
+>exports : Symbol("mod1", Decl(mod1.js, 0, 0))
 >K : Symbol(K, Decl(mod1.js, 5, 1))
->NS.K : Symbol(K, Decl(mod1.js, 0, 11))
->NS : Symbol(NS, Decl(mod1.js, 0, 3), Decl(mod1.js, 0, 11))
->K : Symbol(K, Decl(mod1.js, 0, 11))
+>NS : Symbol(NS, Decl(mod1.js, 0, 3))
 
