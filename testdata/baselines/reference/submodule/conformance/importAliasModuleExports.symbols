//// [tests/cases/conformance/salsa/importAliasModuleExports.ts] ////

=== mod1.js ===
class Alias {
>Alias : Symbol(Alias, Decl(mod1.js, 0, 0))

    bar() { return 1 }
>bar : Symbol(bar, Decl(mod1.js, 0, 13))
}
module.exports = Alias;
>module.exports : Symbol(Alias, Decl(mod1.js, 0, 0))
>module : Symbol(module.exports)
>exports : Symbol(Alias, Decl(mod1.js, 0, 0))
>Alias : Symbol(Alias, Decl(mod1.js, 0, 0))

=== main.js ===
import A from './mod1'
>A : Symbol(A, Decl(main.js, 0, 6))

A.prototype.foo = 0
>A.prototype : Symbol(prototype)
>A : Symbol(A, Decl(main.js, 0, 6))
>prototype : Symbol(prototype)

A.prototype.func = function() { this._func = 0; }
>A.prototype : Symbol(prototype)
>A : Symbol(A, Decl(main.js, 0, 6))
>prototype : Symbol(prototype)

Object.defineProperty(A.prototype, "def", { value: 0 });
>Object.defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
>A.prototype : Symbol(prototype)
>A : Symbol(A, Decl(main.js, 0, 6))
>prototype : Symbol(prototype)
>value : Symbol(value, Decl(main.js, 3, 43))

new A().bar
>new A().bar : Symbol(bar, Decl(mod1.js, 0, 13))
>A : Symbol(A, Decl(main.js, 0, 6))
>bar : Symbol(bar, Decl(mod1.js, 0, 13))

new A().foo
>A : Symbol(A, Decl(main.js, 0, 6))

new A().func()
>A : Symbol(A, Decl(main.js, 0, 6))

new A().def
>A : Symbol(A, Decl(main.js, 0, 6))

