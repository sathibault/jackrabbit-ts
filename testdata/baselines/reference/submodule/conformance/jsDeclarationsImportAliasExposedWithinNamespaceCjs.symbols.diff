--- old.jsDeclarationsImportAliasExposedWithinNamespaceCjs.symbols
+++ new.jsDeclarationsImportAliasExposedWithinNamespaceCjs.symbols
@@= skipped -11, +11 lines =@@
  * @type {Object<string,*>}
  */
 const testFnTypes = {
->testFnTypes : Symbol(testFnTypes, Decl(file2.js, 7, 5), Decl(file2.js, 11, 37))
+>testFnTypes : Symbol(testFnTypes, Decl(file2.js, 7, 5), Decl(file2.js, 11, 4))
 
     // SOME PROPS HERE
 };
@@= skipped -29, +29 lines =@@
 }
 
 module.exports = {testFn, testFnTypes};
->module.exports : Symbol(module.exports, Decl(file2.js, 0, 0))
->module : Symbol(module, Decl(file2.js, 25, 1))
->exports : Symbol(module.exports, Decl(file2.js, 0, 0))
+>module.exports : Symbol(export=, Decl(file2.js, 25, 1))
+>module : Symbol(module.exports)
+>exports : Symbol(export=, Decl(file2.js, 25, 1))
 >testFn : Symbol(testFn, Decl(file2.js, 27, 18))
 >testFnTypes : Symbol(testFnTypes, Decl(file2.js, 27, 25))
 
@@= skipped -13, +13 lines =@@
  * @type {Object<string,*>}
  */
 const myTypes = {
->myTypes : Symbol(myTypes, Decl(file.js, 5, 5), Decl(file.js, 9, 50), Decl(file.js, 12, 12), Decl(file.js, 17, 38))
+>myTypes : Symbol(myTypes, Decl(file.js, 5, 5), Decl(file.js, 9, 4), Decl(file.js, 12, 3), Decl(file.js, 17, 4))
 
     // SOME PROPS HERE
 };
@@= skipped -16, +16 lines =@@
 /** @typedef {myTypes.typeB|Function} myTypes.typeC */
 
 exports.myTypes = myTypes;
->exports.myTypes : Symbol(myTypes, Decl(file.js, 7, 2))
->exports : Symbol(myTypes, Decl(file.js, 7, 2))
->myTypes : Symbol(myTypes, Decl(file.js, 7, 2))
->myTypes : Symbol(myTypes, Decl(file.js, 5, 5), Decl(file.js, 9, 50), Decl(file.js, 12, 12), Decl(file.js, 17, 38))
+>exports.myTypes : Symbol(myTypes, Decl(file.js, 9, 4), Decl(file.js, 7, 2))
+>exports : Symbol("file", Decl(file.js, 0, 0))
+>myTypes : Symbol(myTypes, Decl(file.js, 9, 4), Decl(file.js, 7, 2))
+>myTypes : Symbol(myTypes, Decl(file.js, 5, 5), Decl(file.js, 9, 4), Decl(file.js, 12, 3), Decl(file.js, 17, 4))
 
