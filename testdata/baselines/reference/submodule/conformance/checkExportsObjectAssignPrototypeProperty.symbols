//// [tests/cases/conformance/jsdoc/checkExportsObjectAssignPrototypeProperty.ts] ////

=== validator.ts ===
import "./";

import Person = require("./mod1");
>Person : Symbol(Person, Decl(validator.ts, 0, 12))

const m1 = new Person("Name")
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))
>Person : Symbol(Person, Decl(validator.ts, 0, 12))

m1.thing;
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))

m1.readonlyProp;
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))

m1.rwAccessors;
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))

m1.readonlyAccessor;
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))

m1.setonlyAccessor;
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))

// allowed assignments
m1.thing = 10;
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))

m1.rwAccessors = 11;
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))

m1.setonlyAccessor = "yes";
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))

// disallowed assignments
m1.readonlyProp = "name";
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))

m1.readonlyAccessor = 12;
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))

m1.thing = "no";
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))

m1.rwAccessors = "no";
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))

m1.setonlyAccessor = 0;
>m1 : Symbol(m1, Decl(validator.ts, 4, 5))


=== mod1.js ===
/**
 * @constructor
 * @param {string} name
 */
function Person(name) {
>Person : Symbol(Person, Decl(mod1.js, 0, 0))
>name : Symbol(name, Decl(mod1.js, 4, 16))

    this.name = name;
>name : Symbol(name, Decl(mod1.js, 4, 16))
}
Person.prototype.describe = function () {
>Person.prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
>Person : Symbol(Person, Decl(mod1.js, 0, 0))
>prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))

    return "Person called " + this.name;
};
Object.defineProperty(Person.prototype, "thing", { value: 42, writable: true });
>Object.defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
>Person.prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
>Person : Symbol(Person, Decl(mod1.js, 0, 0))
>prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
>value : Symbol(value, Decl(mod1.js, 10, 50))
>writable : Symbol(writable, Decl(mod1.js, 10, 61))

Object.defineProperty(Person.prototype, "readonlyProp", { value: "Smith", writable: false });
>Object.defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
>Person.prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
>Person : Symbol(Person, Decl(mod1.js, 0, 0))
>prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
>value : Symbol(value, Decl(mod1.js, 11, 57))
>writable : Symbol(writable, Decl(mod1.js, 11, 73))

Object.defineProperty(Person.prototype, "rwAccessors", { get() { return 98122 }, set(_) { /*ignore*/ } });
>Object.defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
>Person.prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
>Person : Symbol(Person, Decl(mod1.js, 0, 0))
>prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
>get : Symbol(get, Decl(mod1.js, 12, 56))
>set : Symbol(set, Decl(mod1.js, 12, 80))
>_ : Symbol(_, Decl(mod1.js, 12, 85))

Object.defineProperty(Person.prototype, "readonlyAccessor", { get() { return 21.75 } });
>Object.defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
>Person.prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
>Person : Symbol(Person, Decl(mod1.js, 0, 0))
>prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
>get : Symbol(get, Decl(mod1.js, 13, 61))

Object.defineProperty(Person.prototype, "setonlyAccessor", {
>Object.defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>defineProperty : Symbol(defineProperty, Decl(lib.es5.d.ts, --, --))
>Person.prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))
>Person : Symbol(Person, Decl(mod1.js, 0, 0))
>prototype : Symbol(prototype, Decl(lib.es5.d.ts, --, --))

    /** @param {string} str */
    set(str) {
>set : Symbol(set, Decl(mod1.js, 14, 60))
>str : Symbol(str, Decl(mod1.js, 16, 8))

        this.rwAccessors = Number(str)
>Number : Symbol(Number, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>str : Symbol(str, Decl(mod1.js, 16, 8))
    }
});
module.exports = Person;
>module.exports : Symbol(Person, Decl(mod1.js, 0, 0))
>module : Symbol(module.exports)
>exports : Symbol(Person, Decl(mod1.js, 0, 0))
>Person : Symbol(Person, Decl(mod1.js, 0, 0))

