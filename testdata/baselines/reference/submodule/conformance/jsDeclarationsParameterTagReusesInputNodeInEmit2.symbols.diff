--- old.jsDeclarationsParameterTagReusesInputNodeInEmit2.symbols
+++ new.jsDeclarationsParameterTagReusesInputNodeInEmit2.symbols
@@= skipped -7, +7 lines =@@
 }
 
 const BaseFactory = () => {
->BaseFactory : Symbol(BaseFactory, Decl(base.js, 4, 5), Decl(base.js, 6, 2))
+>BaseFactory : Symbol(BaseFactory, Decl(base.js, 4, 5))
 
     return new Base();
 >Base : Symbol(Base, Decl(base.js, 0, 0))
@@= skipped -8, +8 lines =@@
 };
 
 BaseFactory.Base = Base;
->BaseFactory.Base : Symbol(BaseFactory.Base, Decl(base.js, 6, 2))
->BaseFactory : Symbol(BaseFactory, Decl(base.js, 4, 5), Decl(base.js, 6, 2))
->Base : Symbol(BaseFactory.Base, Decl(base.js, 6, 2))
+>BaseFactory.Base : Symbol(Base, Decl(base.js, 6, 2))
+>BaseFactory : Symbol(BaseFactory, Decl(base.js, 4, 5))
+>Base : Symbol(Base, Decl(base.js, 6, 2))
 >Base : Symbol(Base, Decl(base.js, 0, 0))
 
 module.exports = BaseFactory;
->module.exports : Symbol(module.exports, Decl(base.js, 0, 0))
->module : Symbol(export=, Decl(base.js, 8, 24))
->exports : Symbol(export=, Decl(base.js, 8, 24))
->BaseFactory : Symbol(BaseFactory, Decl(base.js, 4, 5), Decl(base.js, 6, 2))
+>module.exports : Symbol(BaseFactory, Decl(base.js, 4, 5))
+>module : Symbol(module.exports)
+>exports : Symbol(BaseFactory, Decl(base.js, 4, 5))
+>BaseFactory : Symbol(BaseFactory, Decl(base.js, 4, 5))
 
 === file.js ===
 /** @typedef {typeof import('./base')} BaseFactory */
