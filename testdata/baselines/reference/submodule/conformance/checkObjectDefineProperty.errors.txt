index.js(19,10): error TS2741: Property 'name' is missing in type '{}' but required in type '{ name: string; }'.
index.js(23,11): error TS2339: Property 'zip' does not exist on type '{}'.
index.js(28,11): error TS2339: Property 'houseNumber' does not exist on type '{}'.
validate.ts(3,3): error TS2339: Property 'name' does not exist on type '{}'.
validate.ts(4,3): error TS2339: Property 'middleInit' does not exist on type '{}'.
validate.ts(5,3): error TS2339: Property 'lastName' does not exist on type '{}'.
validate.ts(6,3): error TS2339: Property 'zip' does not exist on type '{}'.
validate.ts(7,3): error TS2339: Property 'houseNumber' does not exist on type '{}'.
validate.ts(8,3): error TS2339: Property 'zipStr' does not exist on type '{}'.
validate.ts(10,3): error TS2339: Property 'name' does not exist on type '{}'.
validate.ts(11,3): error TS2339: Property 'zip' does not exist on type '{}'.
validate.ts(12,3): error TS2339: Property 'zipStr' does not exist on type '{}'.
validate.ts(14,3): error TS2339: Property 'lastName' does not exist on type '{}'.
validate.ts(15,3): error TS2339: Property 'houseNumber' does not exist on type '{}'.
validate.ts(16,3): error TS2339: Property 'zipStr' does not exist on type '{}'.
validate.ts(17,3): error TS2339: Property 'middleInit' does not exist on type '{}'.


==== validate.ts (13 errors) ====
    // Validate in TS as simple validations would usually be interpreted as more special assignments
    import x = require("./");
    x.name;
      ~~~~
!!! error TS2339: Property 'name' does not exist on type '{}'.
    x.middleInit;
      ~~~~~~~~~~
!!! error TS2339: Property 'middleInit' does not exist on type '{}'.
    x.lastName;
      ~~~~~~~~
!!! error TS2339: Property 'lastName' does not exist on type '{}'.
    x.zip;
      ~~~
!!! error TS2339: Property 'zip' does not exist on type '{}'.
    x.houseNumber;
      ~~~~~~~~~~~
!!! error TS2339: Property 'houseNumber' does not exist on type '{}'.
    x.zipStr;
      ~~~~~~
!!! error TS2339: Property 'zipStr' does not exist on type '{}'.
    
    x.name = "Another";
      ~~~~
!!! error TS2339: Property 'name' does not exist on type '{}'.
    x.zip = 98123;
      ~~~
!!! error TS2339: Property 'zip' does not exist on type '{}'.
    x.zipStr = "OK";
      ~~~~~~
!!! error TS2339: Property 'zipStr' does not exist on type '{}'.
    
    x.lastName = "should fail";
      ~~~~~~~~
!!! error TS2339: Property 'lastName' does not exist on type '{}'.
    x.houseNumber = 12; // should also fail
      ~~~~~~~~~~~
!!! error TS2339: Property 'houseNumber' does not exist on type '{}'.
    x.zipStr = 12; // should fail
      ~~~~~~
!!! error TS2339: Property 'zipStr' does not exist on type '{}'.
    x.middleInit = "R"; // should also fail
      ~~~~~~~~~~
!!! error TS2339: Property 'middleInit' does not exist on type '{}'.
    
==== index.js (3 errors) ====
    const x = {};
    Object.defineProperty(x, "name", { value: "Charles", writable: true });
    Object.defineProperty(x, "middleInit", { value: "H" });
    Object.defineProperty(x, "lastName", { value: "Smith", writable: false });
    Object.defineProperty(x, "zip", { get() { return 98122 }, set(_) { /*ignore*/ } });
    Object.defineProperty(x, "houseNumber", { get() { return 21.75 } });
    Object.defineProperty(x, "zipStr", {
        /** @param {string} str */
        set(str) {
            this.zip = Number(str) 
        }
    });
    
    /**
     * @param {{name: string}} named
     */
    function takeName(named) { return named.name; }
    
    takeName(x);
             ~
!!! error TS2741: Property 'name' is missing in type '{}' but required in type '{ name: string; }'.
!!! related TS2728 index.js:15:13: 'name' is declared here.
    /**
     * @type {number}
     */
    var a = x.zip;
              ~~~
!!! error TS2339: Property 'zip' does not exist on type '{}'.
    
    /**
     * @type {number}
     */
    var b = x.houseNumber;
              ~~~~~~~~~~~
!!! error TS2339: Property 'houseNumber' does not exist on type '{}'.
    
    const returnExemplar = () => x;
    const needsExemplar = (_ = x) => void 0;
    
    const expected = /** @type {{name: string, readonly middleInit: string, readonly lastName: string, zip: number, readonly houseNumber: number, zipStr: string}} */(/** @type {*} */(null));
    
    /**
     * 
     * @param {typeof returnExemplar} a 
     * @param {typeof needsExemplar} b 
     */
    function match(a, b) {}
    
    match(() => expected, (x = expected) => void 0);
    
    module.exports = x;
    