//// [tests/cases/conformance/jsdoc/declarations/jsDeclarationsParameterTagReusesInputNodeInEmit2.ts] ////

=== base.js ===
class Base {
>Base : Symbol(Base, Decl(base.js, 0, 0))

    constructor() {}
}

const BaseFactory = () => {
>BaseFactory : Symbol(BaseFactory, Decl(base.js, 4, 5))

    return new Base();
>Base : Symbol(Base, Decl(base.js, 0, 0))

};

BaseFactory.Base = Base;
>BaseFactory.Base : Symbol(Base, Decl(base.js, 6, 2))
>BaseFactory : Symbol(BaseFactory, Decl(base.js, 4, 5))
>Base : Symbol(Base, Decl(base.js, 6, 2))
>Base : Symbol(Base, Decl(base.js, 0, 0))

module.exports = BaseFactory;
>module.exports : Symbol(BaseFactory, Decl(base.js, 4, 5))
>module : Symbol(module.exports)
>exports : Symbol(BaseFactory, Decl(base.js, 4, 5))
>BaseFactory : Symbol(BaseFactory, Decl(base.js, 4, 5))

=== file.js ===
/** @typedef {typeof import('./base')} BaseFactory */

/**
 *
 * @param {InstanceType<BaseFactory["Base"]>} base
 * @returns {InstanceType<BaseFactory["Base"]>}
 */
const test = (base) => {
>test : Symbol(test, Decl(file.js, 7, 5))
>base : Symbol(base, Decl(file.js, 7, 14))

    return base;
>base : Symbol(base, Decl(file.js, 7, 14))

};

