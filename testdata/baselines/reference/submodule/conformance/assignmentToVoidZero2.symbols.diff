--- old.assignmentToVoidZero2.symbols
+++ new.assignmentToVoidZero2.symbols
@@= skipped -2, +2 lines =@@
 === assignmentToVoidZero2.js ===
 exports.j = 1;
 >exports.j : Symbol(j, Decl(assignmentToVoidZero2.js, 0, 0))
->exports : Symbol(j, Decl(assignmentToVoidZero2.js, 0, 0))
+>exports : Symbol("assignmentToVoidZero2", Decl(assignmentToVoidZero2.js, 0, 0))
 >j : Symbol(j, Decl(assignmentToVoidZero2.js, 0, 0))
 
 exports.k = void 0;
+>exports.k : Symbol(k, Decl(assignmentToVoidZero2.js, 0, 14))
 >exports : Symbol("assignmentToVoidZero2", Decl(assignmentToVoidZero2.js, 0, 0))
+>k : Symbol(k, Decl(assignmentToVoidZero2.js, 0, 14))
 
 var o = {}
->o : Symbol(o, Decl(assignmentToVoidZero2.js, 2, 3), Decl(assignmentToVoidZero2.js, 2, 10))
+>o : Symbol(o, Decl(assignmentToVoidZero2.js, 2, 3))
 
 o.x = 1
->o.x : Symbol(o.x, Decl(assignmentToVoidZero2.js, 2, 10))
->o : Symbol(o, Decl(assignmentToVoidZero2.js, 2, 3), Decl(assignmentToVoidZero2.js, 2, 10))
->x : Symbol(o.x, Decl(assignmentToVoidZero2.js, 2, 10))
+>o : Symbol(o, Decl(assignmentToVoidZero2.js, 2, 3))
 
 o.y = void 0
->o : Symbol(o, Decl(assignmentToVoidZero2.js, 2, 3), Decl(assignmentToVoidZero2.js, 2, 10))
+>o : Symbol(o, Decl(assignmentToVoidZero2.js, 2, 3))
 
 o.x + o.y
->o.x : Symbol(o.x, Decl(assignmentToVoidZero2.js, 2, 10))
->o : Symbol(o, Decl(assignmentToVoidZero2.js, 2, 3), Decl(assignmentToVoidZero2.js, 2, 10))
->x : Symbol(o.x, Decl(assignmentToVoidZero2.js, 2, 10))
->o : Symbol(o, Decl(assignmentToVoidZero2.js, 2, 3), Decl(assignmentToVoidZero2.js, 2, 10))
+>o : Symbol(o, Decl(assignmentToVoidZero2.js, 2, 3))
+>o : Symbol(o, Decl(assignmentToVoidZero2.js, 2, 3))
 
 function C() {
 >C : Symbol(C, Decl(assignmentToVoidZero2.js, 5, 9))
 
     this.p = 1
->this.p : Symbol(C.p, Decl(assignmentToVoidZero2.js, 7, 14))
->this : Symbol(C, Decl(assignmentToVoidZero2.js, 5, 9))
->p : Symbol(C.p, Decl(assignmentToVoidZero2.js, 7, 14))
-
     this.q = void 0
->this : Symbol(C, Decl(assignmentToVoidZero2.js, 5, 9))
 }
 var c = new C()
 >c : Symbol(c, Decl(assignmentToVoidZero2.js, 11, 3))
 >C : Symbol(C, Decl(assignmentToVoidZero2.js, 5, 9))
 
 c.p + c.q
->c.p : Symbol(C.p, Decl(assignmentToVoidZero2.js, 7, 14))
 >c : Symbol(c, Decl(assignmentToVoidZero2.js, 11, 3))
->p : Symbol(C.p, Decl(assignmentToVoidZero2.js, 7, 14))
 >c : Symbol(c, Decl(assignmentToVoidZero2.js, 11, 3))
 
 === importer.js ===
