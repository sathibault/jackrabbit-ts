//// [tests/cases/conformance/jsdoc/jsdocTypeFromChainedAssignment2.ts] ////

=== use.js ===
var mod = require('./mod');
>mod : typeof import("mod")
>require('./mod') : typeof import("mod")
>require : any
>'./mod' : "./mod"

mod.f('no')
>mod.f('no') : any
>mod.f : (n: any) => any
>mod : typeof import("mod")
>f : (n: any) => any
>'no' : "no"

mod.g('also no')
>mod.g('also no') : any
>mod.g : any
>mod : typeof import("mod")
>g : any
>'also no' : "also no"

mod.h(0)
>mod.h(0) : string
>mod.h : (mom: any) => string
>mod : typeof import("mod")
>h : (mom: any) => string
>0 : 0

mod.i(1)
>mod.i(1) : any
>mod.i : any
>mod : typeof import("mod")
>i : any
>1 : 1

=== mod.js ===
/** @param {number} n */
exports.f = exports.g = function fg(n) {
>exports.f = exports.g = function fg(n) {    return n + 1} : (n: any) => any
>exports.f : (n: any) => any
>exports : typeof import("mod")
>f : (n: any) => any
>exports.g = function fg(n) {    return n + 1} : (n: any) => any
>exports.g : any
>exports : typeof import("mod")
>g : any
>function fg(n) {    return n + 1} : (n: any) => any
>fg : (n: any) => any
>n : any

    return n + 1
>n + 1 : any
>n : any
>1 : 1
}
/** @param {string} mom */
module.exports.h = module.exports.i = function hi(mom) {
>module.exports.h = module.exports.i = function hi(mom) {    return `hi, ${mom}!`;} : (mom: any) => string
>module.exports.h : (mom: any) => string
>module.exports : typeof import("mod")
>module : { "mod": typeof import("mod"); }
>exports : typeof import("mod")
>h : (mom: any) => string
>module.exports.i = function hi(mom) {    return `hi, ${mom}!`;} : (mom: any) => string
>module.exports.i : any
>module.exports : typeof import("mod")
>module : { "mod": typeof import("mod"); }
>exports : typeof import("mod")
>i : any
>function hi(mom) {    return `hi, ${mom}!`;} : (mom: any) => string
>hi : (mom: any) => string
>mom : any

    return `hi, ${mom}!`;
>`hi, ${mom}!` : string
>mom : any
}

