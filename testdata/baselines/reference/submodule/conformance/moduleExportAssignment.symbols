//// [tests/cases/conformance/salsa/moduleExportAssignment.ts] ////

=== use.js ===
var npmlog = require('./npmlog')
>npmlog : Symbol(npmlog, Decl(use.js, 0, 3))
>require : Symbol(require)
>'./npmlog' : Symbol("npmlog", Decl(npmlog.js, 0, 0))

npmlog.x
>npmlog : Symbol(npmlog, Decl(use.js, 0, 3))

npmlog.on
>npmlog : Symbol(npmlog, Decl(use.js, 0, 3))

=== npmlog.js ===
class EE {
>EE : Symbol(EE, Decl(npmlog.js, 0, 0))

    /** @param {string} s */
    on(s) { }
>on : Symbol(on, Decl(npmlog.js, 0, 10))
>s : Symbol(s, Decl(npmlog.js, 2, 7))
}
var npmlog = module.exports = new EE()
>npmlog : Symbol(npmlog, Decl(npmlog.js, 4, 3))
>module.exports : Symbol("npmlog", Decl(npmlog.js, 0, 0))
>module : Symbol(module.exports)
>exports : Symbol("npmlog", Decl(npmlog.js, 0, 0))
>EE : Symbol(EE, Decl(npmlog.js, 0, 0))

npmlog.on('hi') // both references should see EE.on
>npmlog.on : Symbol(on, Decl(npmlog.js, 0, 10))
>npmlog : Symbol(npmlog, Decl(npmlog.js, 4, 3))
>on : Symbol(on, Decl(npmlog.js, 0, 10))

module.exports.on('hi') // here too
>module.exports : Symbol("npmlog", Decl(npmlog.js, 0, 0))
>module : Symbol(module.exports)
>exports : Symbol("npmlog", Decl(npmlog.js, 0, 0))

npmlog.x = 1
>npmlog : Symbol(npmlog, Decl(npmlog.js, 4, 3))

module.exports.y = 2
>module.exports.y : Symbol(y, Decl(npmlog.js, 9, 12))
>module.exports : Symbol("npmlog", Decl(npmlog.js, 0, 0))
>module : Symbol(module.exports)
>exports : Symbol("npmlog", Decl(npmlog.js, 0, 0))
>y : Symbol(y, Decl(npmlog.js, 9, 12))

npmlog.y
>npmlog : Symbol(npmlog, Decl(npmlog.js, 4, 3))

module.exports.x
>module.exports : Symbol("npmlog", Decl(npmlog.js, 0, 0))
>module : Symbol(module.exports)
>exports : Symbol("npmlog", Decl(npmlog.js, 0, 0))

