--- old.jsdocTypeReferenceToImportOfClassExpression.symbols
+++ new.jsdocTypeReferenceToImportOfClassExpression.symbols
@@= skipped -8, +8 lines =@@
 /** @typedef {number} Cictema */
 
 module.exports = class MC {
->module.exports : Symbol(module.exports, Decl(MC.js, 0, 0))
->module : Symbol(export=, Decl(MC.js, 0, 27))
->exports : Symbol(export=, Decl(MC.js, 0, 27))
+>module.exports : Symbol(MC, Decl(MC.js, 4, 16))
+>module : Symbol(module.exports)
+>exports : Symbol(MC, Decl(MC.js, 4, 16))
 >MC : Symbol(MC, Decl(MC.js, 4, 16))
 
   watch() {
->watch : Symbol(MC.watch, Decl(MC.js, 4, 27))
+>watch : Symbol(watch, Decl(MC.js, 4, 27))
 
     return new MW(this);
 >MW : Symbol(MW, Decl(MC.js, 0, 5))
@@= skipped -27, +27 lines =@@
 >compiler : Symbol(compiler, Decl(MW.js, 6, 14))
 
     this.compiler = compiler;
->this.compiler : Symbol(MW.compiler, Decl(MW.js, 6, 25))
 >this : Symbol(MW, Decl(MW.js, 0, 0))
->compiler : Symbol(MW.compiler, Decl(MW.js, 6, 25))
 >compiler : Symbol(compiler, Decl(MW.js, 6, 14))
   }
 }
 
 module.exports = MW;
->module.exports : Symbol(module.exports, Decl(MW.js, 0, 0))
->module : Symbol(export=, Decl(MW.js, 9, 1))
->exports : Symbol(export=, Decl(MW.js, 9, 1))
+>module.exports : Symbol(MW, Decl(MW.js, 0, 0))
+>module : Symbol(module.exports)
+>exports : Symbol(MW, Decl(MW.js, 0, 0))
 >MW : Symbol(MW, Decl(MW.js, 0, 0))
 
