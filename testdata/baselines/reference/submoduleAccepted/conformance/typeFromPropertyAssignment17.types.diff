--- old.typeFromPropertyAssignment17.types
+++ new.typeFromPropertyAssignment17.types
@@= skipped -2, +2 lines =@@
 === use.js ===
 /// <reference path='./types.d.ts'/>
 var mini = require('./minimatch')
->mini : typeof mini
->require('./minimatch') : typeof mini
+>mini : { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }
+>require('./minimatch') : { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }
 >require : any
 >'./minimatch' : "./minimatch"
 
 mini.M.defaults()
 >mini.M.defaults() : any
 >mini.M.defaults : (def: any) => any
->mini.M : typeof M
->mini : typeof mini
->M : typeof M
+>mini.M : { (): void; defaults: (def: any) => any; }
+>mini : { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }
+>M : { (): void; defaults: (def: any) => any; }
 >defaults : (def: any) => any
 
 var m = new mini.M()
->m : M
->new mini.M() : M
->mini.M : typeof M
->mini : typeof mini
->M : typeof M
+>m : any
+>new mini.M() : any
+>mini.M : { (): void; defaults: (def: any) => any; }
+>mini : { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }
+>M : { (): void; defaults: (def: any) => any; }
 
 m.m()
->m.m() : void
->m.m : () => void
->m : M
->m : () => void
+>m.m() : any
+>m.m : any
+>m : any
+>m : any
 
 mini.filter()
 >mini.filter() : void
 >mini.filter : () => void
->mini : typeof mini
+>mini : { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }
 >filter : () => void
 
 === types.d.ts ===
@@= skipped -42, +42 lines =@@
 === minimatch.js ===
 /// <reference path='./types.d.ts'/>
 module.exports = minimatch
->module.exports = minimatch : typeof minimatch
->module.exports : typeof minimatch
->module : { exports: typeof minimatch; }
->exports : typeof minimatch
->minimatch : typeof minimatch
+>module.exports = minimatch : { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }
+>module.exports : { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }
+>module : { minimatch: { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }; }
+>exports : { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }
+>minimatch : { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }
 
 minimatch.M = M
->minimatch.M = M : typeof M
->minimatch.M : typeof M
->minimatch : typeof minimatch
->M : typeof M
->M : typeof M
+>minimatch.M = M : { (): void; defaults: (def: any) => any; }
+>minimatch.M : { (): void; defaults: (def: any) => any; }
+>minimatch : { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }
+>M : { (): void; defaults: (def: any) => any; }
+>M : { (): void; defaults: (def: any) => any; }
 
 minimatch.filter = filter
 >minimatch.filter = filter : () => void
 >minimatch.filter : () => void
->minimatch : typeof minimatch
+>minimatch : { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }
 >filter : () => void
 >filter : () => void
 
@@= skipped -25, +25 lines =@@
 
     return minimatch()
 >minimatch() : void
->minimatch : typeof minimatch
+>minimatch : { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }
 }
 function minimatch() {
->minimatch : typeof minimatch
+>minimatch : { (): void; M: { (): void; defaults: (def: any) => any; }; filter: () => void; }
 }
 M.defaults = function (def) {
 >M.defaults = function (def) {    return def} : (def: any) => any
 >M.defaults : (def: any) => any
->M : typeof M
+>M : { (): void; defaults: (def: any) => any; }
 >defaults : (def: any) => any
 >function (def) {    return def} : (def: any) => any
 >def : any
@@= skipped -20, +20 lines =@@
 >M.prototype.m = function () {} : () => void
 >M.prototype.m : any
 >M.prototype : any
->M : typeof M
+>M : { (): void; defaults: (def: any) => any; }
 >prototype : any
 >m : any
 >function () {} : () => void
 }
 function M() {
->M : typeof M
+>M : { (): void; defaults: (def: any) => any; }
 }
 
