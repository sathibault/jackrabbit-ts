--- old.jsdocImportType2.types
+++ new.jsdocImportType2.types
@@= skipped -4, +4 lines =@@
 /** @typedef {import("./mod1")} C
  * @type {C} */
 var c;
->c : D
+>c : Chunk
 
 c.chunk;
->c.chunk : number
->c : D
->chunk : number
+>c.chunk : any
+>c : Chunk
+>chunk : any
 
 const D = require("./mod1");
->D : typeof D
->require("./mod1") : typeof D
+>D : typeof Chunk
+>require("./mod1") : typeof Chunk
 >require : (name: string) => any
 >"./mod1" : "./mod1"
 
 /** @type {D} */
 var d;
->d : D
+>d : Chunk
 
 d.chunk;
->d.chunk : number
->d : D
->chunk : number
+>d.chunk : any
+>d : Chunk
+>chunk : any
 
 === types.d.ts ===
 declare function require(name: string): any;
@@= skipped -37, +37 lines =@@
 === mod1.js ===
 /// <reference path='./types.d.ts'/>
 module.exports = class Chunk {
->module.exports = class Chunk {    constructor() {        this.chunk = 1;    }} : typeof import("mod1")
->module.exports : typeof import("mod1")
->module : { exports: typeof import("mod1"); }
->exports : typeof import("mod1")
->class Chunk {    constructor() {        this.chunk = 1;    }} : typeof import("mod1")
->Chunk : typeof import("mod1")
+>module.exports = class Chunk {    constructor() {        this.chunk = 1;    }} : typeof Chunk
+>module.exports : typeof Chunk
+>module : { Chunk: typeof Chunk; }
+>exports : typeof Chunk
+>class Chunk {    constructor() {        this.chunk = 1;    }} : typeof Chunk
+>Chunk : typeof Chunk
 
     constructor() {
         this.chunk = 1;
