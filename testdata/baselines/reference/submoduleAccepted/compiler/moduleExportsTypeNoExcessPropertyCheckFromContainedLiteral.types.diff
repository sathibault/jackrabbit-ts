--- old.moduleExportsTypeNoExcessPropertyCheckFromContainedLiteral.types
+++ new.moduleExportsTypeNoExcessPropertyCheckFromContainedLiteral.types
@@= skipped -7, +7 lines =@@
 >'./eslint-plugin-react.js' : "./eslint-plugin-react.js"
 
 const tseslint = require('./typescript-eslint.js');
->tseslint : typeof tseslint
->require('./typescript-eslint.js') : typeof tseslint
+>tseslint : { config: (...configs: any[]) => void; }
+>require('./typescript-eslint.js') : { config: (...configs: any[]) => void; }
 >require : any
 >'./typescript-eslint.js' : "./typescript-eslint.js"
 
 tseslint.config(eslintReact)
 >tseslint.config(eslintReact) : void
->tseslint.config : (...configs: Config[]) => void
->tseslint : typeof tseslint
->config : (...configs: Config[]) => void
+>tseslint.config : (...configs: any[]) => void
+>tseslint : { config: (...configs: any[]) => void; }
+>config : (...configs: any[]) => void
 >eslintReact : { plugins: { react: { deprecatedRules: { "jsx-sort-default-props": boolean; }; rules: { 'no-unsafe': boolean; }; }; }; }
 
 === eslint-plugin-react.js ===
@@= skipped -34, +34 lines =@@
 module.exports = {
 >module.exports = {  plugins: {    react: {      deprecatedRules,      rules: allRules,    },  },} : { plugins: { react: { deprecatedRules: { "jsx-sort-default-props": boolean; }; rules: { 'no-unsafe': boolean; }; }; }; }
 >module.exports : { plugins: { react: { deprecatedRules: { "jsx-sort-default-props": boolean; }; rules: { 'no-unsafe': boolean; }; }; }; }
->module : { exports: { plugins: { react: { deprecatedRules: { "jsx-sort-default-props": boolean; }; rules: { 'no-unsafe': boolean; }; }; }; }; }
+>module : { export=: { plugins: { react: { deprecatedRules: { "jsx-sort-default-props": boolean; }; rules: { 'no-unsafe': boolean; }; }; }; }; }
 >exports : { plugins: { react: { deprecatedRules: { "jsx-sort-default-props": boolean; }; rules: { 'no-unsafe': boolean; }; }; }; }
 >{  plugins: {    react: {      deprecatedRules,      rules: allRules,    },  },} : { plugins: { react: { deprecatedRules: { "jsx-sort-default-props": boolean; }; rules: { 'no-unsafe': boolean; }; }; }; }
 
@@= skipped -36, +36 lines =@@
  * @type {(...configs: Config[]) => void}
  */
 function config(...configs) { }
->config : (...configs: Config[]) => void
->configs : Config[]
+>config : (...configs: any[]) => void
+>configs : any[]
 
 module.exports = { config };
->module.exports = { config } : typeof module.exports
->module.exports : typeof module.exports
->module : { exports: typeof module.exports; }
->exports : typeof module.exports
->{ config } : { config: (...configs: Config[]) => void; }
->config : (...configs: Config[]) => void
+>module.exports = { config } : { config: (...configs: any[]) => void; }
+>module.exports : { config: (...configs: any[]) => void; }
+>module : { export=: { config: (...configs: any[]) => void; }; }
+>exports : { config: (...configs: any[]) => void; }
+>{ config } : { config: (...configs: any[]) => void; }
+>config : (...configs: any[]) => void
 
